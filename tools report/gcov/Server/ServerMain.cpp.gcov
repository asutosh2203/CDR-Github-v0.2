        -:    0:Source:src/ServerMain.cpp
        -:    1:#include <server.h>
        -:    2:
        -:    3:Server s;
        -:    4:Utils serverUtil;
        -:    5:
        -:    6:/*
        -:    7: *  FUNCTION NAME	: signalHandler
        -:    8: *
        -:    9: *  DESCRIPTION		: It handles SIGINT and SIGTSTP signals
        -:   10: *
        -:   11: *  PARAMETERS		: int sig
        -:   12: *
        -:   13: *  RETURN 		: void
        -:   14: *
        -:   15: */
        2:   16:void signalHandler(int sig)
        -:   17:{
       2*:   18:    if (sig == SIGINT || sig == SIGTSTP)
        -:   19:    {
        2:   20:        serverUtil.log(INFO, "Server Closed", S_LOGFILE);
        2:   21:        s.closeServer();
        -:   22:    }
        -:   23:
        2:   24:    exit(EXIT_SUCCESS);
        -:   25:}
        -:   26:
        1:   27:int main(int argc, char **argv)
        -:   28:{
        -:   29:
        -:   30:    try
        -:   31:    {
        1:   32:        if (argc == 3)
        -:   33:        {
        1:   34:            int port = atoi(argv[2]);
        -:   35:
        1:   36:            if (!serverUtil.validateIP(argv[1]))
        -:   37:            {
    #####:   38:                throw("Invalid IP Address");
        -:   39:            }
        1:   40:            if (port > 0)
        -:   41:            {
        1:   42:                s.setIPAddr(argv[1]);
        1:   43:                s.setPort(port);
        -:   44:                // Signal Handling
        1:   45:                signal(SIGINT, signalHandler);
        1:   46:                signal(SIGTSTP, signalHandler);
        -:   47:
        1:   48:                s.createSocket();
        1:   49:                s.bind_listen();
        1:   50:                s.acceptClient();
        -:   51:            }
        -:   52:            else
        -:   53:            {
    #####:   54:                throw("Invalid PORT Number");
        -:   55:            }
        -:   56:        }
        -:   57:        else
        -:   58:        {
    #####:   59:            throw "Invalid number of arguments";
        -:   60:        }
        -:   61:    }
    =====:   62:    catch (const char *err)
        -:   63:    {
    =====:   64:        cerr << err << endl;
    =====:   65:    }
        -:   66:
    #####:   67:    return 0;
        -:   68:}
